!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.swave=e():t.swave=e()}(window,function(){return function(t){var e={};function i(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(o,n,function(e){return t[e]}.bind(null,n));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/",i(i.s=0)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=i(1);e.default=o.Swave},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=i(2),n=i(3),r=function(){function t(t){void 0===t&&(t={}),this.config=new o.default(t),this.loadConfig(),this.loadAudio()}return t.prototype.loadAudio=function(){this.audioCtx=new AudioContext,this.audioSource=this.audioCtx.createMediaElementSource(this.audio),this.gainNode=this.audioCtx.createGain(),this.analyserNode=this.audioCtx.createAnalyser(),this.setAudioNode(this.gainNode,null,this.analyserNode),this.setAudioNode(this.analyserNode,this.gainNode,null)},t.prototype.setAudioNode=function(t,e,i){e?e.connect(t):this.audioSource.connect(t),i?t.connect(i):t.connect(this.audioCtx.destination)},t.prototype.loadConfig=function(){this.audio=new Audio(this.config.audioUrl),this.audio.crossOrigin=this.config.crossOrigin,this.audio.controls=this.config.showControls,this.audio.autoplay=this.config.autoPlay},t.prototype.play=function(){this.audio.play()},t.prototype.stop=function(){this.audio.pause(),this.audio.currentTime=0},t.prototype.pause=function(){this.audio.pause()},t.prototype.setVolume=function(t){this.gainNode&&(t>1&&(t=1),t<.1&&(t=.1),this.gainNode.gain.value=t*t)},t.prototype.enableVisualization=function(t){t&&!this.visualizer&&(this.visualizer=new n.default(t,this.analyserNode))},t.prototype.disableVisualization=function(){this.visualizer&&(this.visualizer.destroyCanvas(),this.visualizer=null)},t.prototype.getDuration=function(){return this.audio?this.audio.duration:null},t.prototype.setCurrentTime=function(t){t<=this.audio.duration&&(this.audio.currentTime=t)},t.prototype.getCurrentTime=function(){return this.audio?this.audio.currentTime:null},t.prototype.changeAudio=function(t){t!==this.audio.currentSrc&&(this.audio.src=t)},t}();e.Swave=r,window.Swave=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){return function(t){for(var e in this.showControls=!1,this.autoPlay=!1,this.audioUrl="",this.crossOrigin="anonymous",t)for(var i in this)e===i&&(this[i]=t[e])}}();e.default=o},function(t,e,i){"use strict";var o,n=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var r=function(t){function e(e,i){var o=t.call(this,e)||this;return o.analyserNode=i,o.animate(),o}return n(e,t),e.prototype.animate=function(){var t=this,e=this.canvas.clientWidth,i=this.canvas.clientHeight;this.analyserNode.fftSize=256;var o=this.analyserNode.frequencyBinCount,n=new Uint8Array(o);this.ctx.clearRect(0,0,e,i);!function r(){requestAnimationFrame(r);t.analyserNode.getByteFrequencyData(n),t.ctx.fillStyle="rgb(255, 255, 255)",t.ctx.fillRect(0,0,e,i);for(var a,u=e/o*2.5,s=0,c=0;c<o;c++)a=n[c],t.ctx.fillStyle="rgb("+(a+100)+",15,156)",t.ctx.fillRect(s,i-a/2,u,a/2),s+=u+1}()},e.prototype.removeVisualizations=function(){this.destroyCanvas()},e}(i(4).default);e.default=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t){this.hostElement=t,this.canvas=document.createElement("canvas"),t.appendChild(this.canvas),this.canvas.id="swave-canvas",this.canvas.width=t.clientWidth,this.canvas.height=t.clientHeight,this.ctx=this.canvas.getContext("2d")}return t.prototype.destroyCanvas=function(){this.hostElement.removeChild(this.canvas)},t}();e.default=o}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
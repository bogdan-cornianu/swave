!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/",i(i.s=0)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=i(1),o=i(2),a=function(){function t(t,e){void 0===e&&(e={}),this.hostElement=t,this.config=new n.default(e),this.loadConfig(),this.loadAudio()}return t.prototype.loadAudio=function(){this.audioCtx=new AudioContext,this.audioSource=this.audioCtx.createMediaElementSource(this.audio),this.gainNode=this.audioCtx.createGain(),this.analyserNode=this.audioCtx.createAnalyser(),this.setAudioNode(this.gainNode,null,this.analyserNode),this.setAudioNode(this.analyserNode,this.gainNode,null)},t.prototype.setAudioNode=function(t,e,i){e?e.connect(t):this.audioSource.connect(t),i?t.connect(i):t.connect(this.audioCtx.destination)},t.prototype.loadConfig=function(){this.audio=new Audio(this.config.audioUrl),this.audio.crossOrigin=this.config.crossOrigin,this.audio.controls=this.config.showControls,this.audio.autoplay=this.config.autoPlay},t.prototype.play=function(){this.audio.play(),this.config.enableVisualization&&this.enableVisualization()},t.prototype.stop=function(){this.audio.pause(),this.audio.currentTime=0},t.prototype.pause=function(){this.audio.pause()},t.prototype.setVolume=function(t){this.gainNode&&(t>1&&(t=1),t<.1&&(t=.1),this.gainNode.gain.value=t*t)},t.prototype.enableVisualization=function(){this.visualizer||(this.visualizer=new o.default(this.hostElement,this.analyserNode))},t.prototype.disableVisualization=function(){this.visualizer&&(this.visualizer.destroyCanvas(),this.visualizer=null)},t.prototype.getDuration=function(){return this.audio?this.audio.duration:null},t.prototype.setCurrentTime=function(t){t<=this.audio.duration&&(this.audio.currentTime=t)},t.prototype.getCurrentTime=function(){return this.audio?this.audio.currentTime:null},t.prototype.changeAudio=function(t){t!==this.audio.currentSrc&&(this.audio.src=t)},t}();e.default=a,window.Swave=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){return function(t){for(var e in this.showControls=!1,this.autoPlay=!1,this.enableVisualization=!0,this.audioUrl="",this.crossOrigin="anonymous",t)for(var i in this)e===i&&(this[i]=t[e])}}();e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){function e(e,i){var n=t.call(this,e)||this;return n.analyserNode=i,n.animate(),n}return o(e,t),e.prototype.animate=function(){var t=this,e=this.canvas.clientWidth,i=this.canvas.clientHeight;this.analyserNode.fftSize=256;var n=this.analyserNode.frequencyBinCount,o=new Uint8Array(n);this.ctx.clearRect(0,0,e,i);!function a(){requestAnimationFrame(a);t.analyserNode.getByteFrequencyData(o),t.ctx.fillStyle="rgb(255, 255, 255)",t.ctx.fillRect(0,0,e,i);for(var r,s=e/n*2.5,u=0,c=0;c<n;c++)r=o[c],t.ctx.fillStyle="rgb("+(r+100)+",15,156)",t.ctx.fillRect(u,i-r/2,s,r/2),u+=s+1}()},e.prototype.removeVisualizations=function(){this.destroyCanvas()},e}(i(3).default);e.default=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t){this.hostElement=t,this.canvas=document.createElement("canvas"),t.appendChild(this.canvas),this.canvas.id="swave-canvas",this.canvas.width=t.clientWidth,this.canvas.height=t.clientHeight,this.ctx=this.canvas.getContext("2d")}return t.prototype.destroyCanvas=function(){this.hostElement.removeChild(this.canvas)},t}();e.default=n}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,